on:
  push:
    tags: [ 'v*.*.*' ]

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      DATABASE_ENGINE: postgresql+psycopg2://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}
      API_URL: http://localhost:8000
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports: [ 5432:5432 ]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - uses: snok/install-poetry@v1
      - run: poetry install --no-interaction --no-ansi --no-root
      - run: poetry run python app/main.py &
      - run: sleep 10
      - run: poetry run pytest tests/test_smoke.py -v

  release:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - run: gh release create ${{ github.ref_name }} --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v4
      - run: |
          docker build -t fastapi-reqres:${GITHUB_REF_NAME#v} .
          docker build -t fastapi-reqres:latest .
          echo "âœ… Built Docker images: ${GITHUB_REF_NAME#v}, latest"